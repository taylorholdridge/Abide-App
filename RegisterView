//
//  RegisterView.swift
//  Abide
//
//  Created by Taylor Holdridge on 9/12/25.
//

import Foundation
import SwiftUI
import FirebaseAuth

struct RegisterView: View {
    @EnvironmentObject var authVM: AuthViewModel
    @Environment(\.presentationMode) var presentationMode

    @State private var name: String = ""
    @State private var email: String = ""
    @State private var password: String = ""
    @State private var confirmPassword: String = ""
    @State private var errorMessage: String?

    var body: some View {
        VStack(spacing: 20) {
            Text("Register New Account")
                .font(.title)
                .bold()

            TextField("Full Name", text: $name)
                .textFieldStyle(.roundedBorder)

            TextField("Email", text: $email)
                .textFieldStyle(.roundedBorder)
                .keyboardType(.emailAddress)
                .autocapitalization(.none)

            SecureField("Password", text: $password)
                .textContentType(.none)
                .textFieldStyle(.roundedBorder)
                .keyboardType(.emailAddress)
                .autocapitalization(.none)

            SecureField("Confirm Password", text: $confirmPassword)
                .textFieldStyle(.roundedBorder)

            if let errorMessage = errorMessage {
                Text(errorMessage)
                    .foregroundColor(.red)
            }

            Button("Register") {
                guard !name.isEmpty else {
                    errorMessage = "Please enter your name"
                    return
                }
                guard password == confirmPassword else {
                    errorMessage = "Passwords do not match"
                    return
                }

                authVM.register(email: email, password: password, displayName: name) { success, error in
                        if success {
                            print("üéâ Registration completed successfully!")
                            presentationMode.wrappedValue.dismiss() // go back to login
                        } else {
                            print("‚ö†Ô∏è Registration failed: \(error ?? "unknown error")")
                            errorMessage = error ?? "Registration failed"
                        }
                    }
            }
            .buttonStyle(.borderedProminent)
            .padding(.top)
        }
        .padding()
    }
}
